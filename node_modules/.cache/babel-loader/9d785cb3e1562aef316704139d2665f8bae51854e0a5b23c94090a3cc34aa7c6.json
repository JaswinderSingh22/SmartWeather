{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading weather data...\", -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($setup.selectedCity.name) + \", \" + _toDisplayString($setup.selectedCity.country), 1 /* TEXT */), $setup.weatherData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", null, \"Temperature: \" + _toDisplayString($setup.weatherData.temp_c) + \"째C\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Feels Like: \" + _toDisplayString($setup.weatherData.feelslike_c) + \"째C\", 1 /* TEXT */), _createCommentVNode(\" <p>Condition: {{ weatherData.condition.text }}</p> \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_4))]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_3","_createElementBlock","_toDisplayString","$setup","selectedCity","name","country","weatherData","_hoisted_1","temp_c","feelslike_c","_createCommentVNode","_hoisted_2","_hoisted_4"],"sources":["/Users/turbanator/Documents/CODING/FRONT-END/weather-app/src/components/WeatherDisplay.vue"],"sourcesContent":["<template>\n    <div>\n    <h2>{{ selectedCity.name }}, {{ selectedCity.country }}</h2>\n    <div v-if=\"weatherData\">\n      <p>Temperature: {{ weatherData.temp_c }}째C</p>\n      <p>Feels Like: {{ weatherData.feelslike_c }}째C</p>\n      <!-- <p>Condition: {{ weatherData.condition.text }}</p> -->\n    </div>\n    <div v-else>\n      <p>Loading weather data...</p>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  import { computed, onMounted } from 'vue';\n  import { useStore } from 'vuex';\n  \n  export default {\n    name: 'WeatherDisplay',\n    setup() {\n      const store = useStore();\n  \n      const selectedCity = computed(() => store.state.selectedCity);\n      const weatherData = computed(() => store.state.weatherData);\n\n      onMounted(() => {\n      store.dispatch('fetchWeatherData');\n    });\n  \n      return { selectedCity, weatherData };\n    },\n  };\n  </script>\n  "],"mappings":";;;;;;;gCASMA,mBAAA,CAA8B,WAA3B,yBAAuB;oBAA1BC,UAA8B,C;;uBARhCC,mBAAA,CAUI,cATJF,mBAAA,CAA4D,YAAAG,gBAAA,CAArDC,MAAA,CAAAC,YAAY,CAACC,IAAI,IAAG,IAAE,GAAAH,gBAAA,CAAGC,MAAA,CAAAC,YAAY,CAACE,OAAO,kBACzCH,MAAA,CAAAI,WAAW,I,cAAtBN,mBAAA,CAIM,OAAAO,UAAA,GAHJT,mBAAA,CAA8C,WAA3C,eAAa,GAAAG,gBAAA,CAAGC,MAAA,CAAAI,WAAW,CAACE,MAAM,IAAG,IAAE,iBAC1CV,mBAAA,CAAkD,WAA/C,cAAY,GAAAG,gBAAA,CAAGC,MAAA,CAAAI,WAAW,CAACG,WAAW,IAAG,IAAE,iBAC9CC,mBAAA,wDAA2D,C,oBAE7DV,mBAAA,CAEM,OAAAW,UAAA,EAAAC,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}