{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  state: {\n    searchResults: [],\n    selectedCity: null,\n    weatherData: null,\n    forecastData: [],\n    latitude: null,\n    longitude: null\n  },\n  mutations: {\n    updateSearchResults(state, results) {\n      state.searchResults = results;\n    },\n    selectCity(state, city) {\n      state.selectedCity = city;\n      state.weatherData = null; // Reset weather data when a new city is selected\n      state.forecastData = []; // Reset forecast data when a new city is selected\n      state.latitude = null;\n      state.longitude = null;\n    },\n    updateWeatherData(state, data) {\n      state.weatherData = data;\n    },\n    updateForecastData(state, data) {\n      state.forecastData = data;\n    },\n    updateLatitude(state, latitude) {\n      state.latitude = latitude;\n    },\n    updateLongitude(state, longitude) {\n      state.longitude = longitude;\n    },\n    CLEAR_SEARCH_RESULTS(state) {\n      state.searchResults = [];\n    }\n  },\n  actions: {\n    async searchCities(searchTerm) {\n      try {\n        const response = await fetch(`https://api.geocodeapi.io/v1/search?text=${searchTerm}&limit=5`);\n        const data = await response.json();\n        this.state.searchResults.value = data.features;\n      } catch (error) {\n        console.error('Error searching cities:', error);\n      }\n    },\n    async fetchWeatherData({\n      commit,\n      state\n    }) {\n      if (state.selectedCity === null || !state.selectedCity.latitude || !state.selectedCity.longitude) {\n        return;\n      }\n      const Weather_apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${state.selectedCity.latitude}&lon=${state.selectedCity.longitude}&exclude={part}&appid=7efa332cf48aeb9d2d391a51027f1a71&units=imperial`;\n      try {\n        const response = await fetch(Weather_apiUrl);\n        const data = await response.json();\n        console.log(\"latlog1:\", data);\n        if (data.error) {\n          console.error('Error fetching weather data:', data.error.message);\n          commit('updateWeatherData', null);\n        } else {\n          commit('updateWeatherData', data);\n        }\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        commit('updateWeatherData', null);\n      }\n    },\n    async fetchForecastData({\n      commit,\n      state\n    }) {\n      if (state.selectedCity === null || !state.selectedCity.latitude || !state.selectedCity.longitude) {\n        return;\n      }\n\n      // const Weather_apiKey = '8b4d68187405f7ea371f47ffd0bce287';\n      const Weather_apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${state.selectedCity.latitude}&lon=${state.selectedCity.longitude}&exclude={part}&appid=7efa332cf48aeb9d2d391a51027f1a71&units=imperial`;\n      try {\n        const response = await fetch(Weather_apiUrl);\n        const data = await response.json();\n        console.log(\"latlog2:\", data);\n        if (data.error) {\n          console.error('Error fetching forecast data:', data.error.message);\n          commit('updateForecastData', []);\n        } else {\n          commit('updateForecastData', data.daily);\n        }\n      } catch (error) {\n        console.error('Error fetching forecast data:', error);\n        commit('updateForecastData', []);\n      }\n    }\n    // clearSearchResults({ commit }) {\n    //   commit('CLEAR_SEARCH_RESULTS');\n    // },\n  },\n\n  getters: {\n    getWeatherIcon: () => icon => {\n      console.log(\"icons:\", icon);\n      // Function logic to return the weather icon based on the icon code\n      // You can use the same logic as before\n\n      // Example implementation using Weather Icons from Google Fonts\n      if (icon === '01d') {\n        return 'wi wi-day-sunny';\n      } else if (icon === '01n') {\n        return 'wi wi-night-clear';\n      } else if (icon === '02d') {\n        return 'wi wi-day-cloudy';\n      } else if (icon === '02n') {\n        return 'wi wi-night-cloudy';\n      } else if (icon === '03d' || icon === '03n') {\n        return 'wi wi-cloud';\n      } else if (icon === '04d' || icon === '04n') {\n        return 'wi wi-cloudy';\n      } else if (icon === '09d' || icon === '09n') {\n        return 'wi wi-showers';\n      } else if (icon === '10d' || icon === '10n') {\n        return 'wi wi-rain';\n      } else if (icon === '11d' || icon === '11n') {\n        return 'wi wi-thunderstorm';\n      } else if (icon === '13d' || icon === '13n') {\n        return 'wi wi-snow';\n      } else if (icon === '50d' || icon === '50n') {\n        return 'wi wi-fog';\n      }\n      return 'wi wi-na';\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","searchResults","selectedCity","weatherData","forecastData","latitude","longitude","mutations","updateSearchResults","results","selectCity","city","updateWeatherData","data","updateForecastData","updateLatitude","updateLongitude","CLEAR_SEARCH_RESULTS","actions","searchCities","searchTerm","response","fetch","json","value","features","error","console","fetchWeatherData","commit","Weather_apiUrl","log","message","fetchForecastData","daily","getters","getWeatherIcon","icon"],"sources":["/Users/turbanator/Documents/CODING/SmartWeather/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\nconst store = createStore({\n  state: {\n    searchResults: [],\n    selectedCity: null,\n    weatherData: null,\n    forecastData: [],\n    latitude: null,\n    longitude: null,\n  },\n  mutations: {\n    updateSearchResults(state, results) {\n      state.searchResults = results;\n    },\n    selectCity(state, city) {\n      state.selectedCity = city;\n      state.weatherData = null; // Reset weather data when a new city is selected\n      state.forecastData = []; // Reset forecast data when a new city is selected\n      state.latitude = null;\n      state.longitude = null;\n    },\n    updateWeatherData(state, data) {\n      state.weatherData = data;\n    },\n    updateForecastData(state, data) {\n      state.forecastData = data;\n    },\n    updateLatitude(state, latitude) {\n      state.latitude = latitude;\n    },\n    updateLongitude(state, longitude) {\n      state.longitude = longitude;\n    },\n    CLEAR_SEARCH_RESULTS(state) {\n      state.searchResults = [];\n  },\n  },\n  actions: {\n\n    async searchCities(searchTerm){\n    try {\n      const response = await fetch(\n        `https://api.geocodeapi.io/v1/search?text=${searchTerm}&limit=5`\n      );\n      const data = await response.json();\n      this.state.searchResults.value = data.features;\n    }\n    catch (error) {\n      console.error('Error searching cities:', error);\n  }\n  },\n    \n    async fetchWeatherData({ commit, state }) {\n      if (state.selectedCity === null || !state.selectedCity.latitude || !state.selectedCity.longitude) {\n        return;\n      }\n\n      const Weather_apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${state.selectedCity.latitude}&lon=${state.selectedCity.longitude}&exclude={part}&appid=7efa332cf48aeb9d2d391a51027f1a71&units=imperial`;\n\n      try {\n        const response = await fetch(Weather_apiUrl);\n        const data = await response.json();\n        console.log(\"latlog1:\", data);\n        if (data.error) {\n          console.error('Error fetching weather data:', data.error.message);\n          commit('updateWeatherData', null);\n        } else {\n          commit('updateWeatherData', data);\n        }\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        commit('updateWeatherData', null);\n      }\n    },\n    async fetchForecastData({ commit, state }) {\n      if (state.selectedCity === null || !state.selectedCity.latitude || !state.selectedCity.longitude) {\n        return;\n      }\n\n      // const Weather_apiKey = '8b4d68187405f7ea371f47ffd0bce287';\n      const Weather_apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${state.selectedCity.latitude}&lon=${state.selectedCity.longitude}&exclude={part}&appid=7efa332cf48aeb9d2d391a51027f1a71&units=imperial`;\n\n\n      try {\n        const response = await fetch(Weather_apiUrl);\n        const data = await response.json();\n        console.log(\"latlog2:\", data);\n\n        if (data.error) {\n          console.error('Error fetching forecast data:', data.error.message);\n          commit('updateForecastData', []);\n        } else {\n          commit('updateForecastData', data.daily);\n        }\n      } catch (error) {\n        console.error('Error fetching forecast data:', error);\n        commit('updateForecastData', []);\n      }\n    },\n    // clearSearchResults({ commit }) {\n    //   commit('CLEAR_SEARCH_RESULTS');\n    // },\n  },\n  getters:{\n    getWeatherIcon: () => (icon) => {\n      console.log(\"icons:\", icon);\n      // Function logic to return the weather icon based on the icon code\n      // You can use the same logic as before\n\n      // Example implementation using Weather Icons from Google Fonts\n      if (icon === '01d') {\n      return 'wi wi-day-sunny';\n    } else if (icon === '01n') {\n      return 'wi wi-night-clear';\n    } else if (icon === '02d') {\n      return 'wi wi-day-cloudy';\n    } else if (icon === '02n') {\n      return 'wi wi-night-cloudy';\n    } else if (icon === '03d' || icon === '03n') {\n      return 'wi wi-cloud';\n    } else if (icon === '04d' || icon === '04n') {\n      return 'wi wi-cloudy';\n    } else if (icon === '09d' || icon === '09n') {\n      return 'wi wi-showers';\n    } else if (icon === '10d' || icon === '10n') {\n      return 'wi wi-rain';\n    } else if (icon === '11d' || icon === '11n') {\n      return 'wi wi-thunderstorm';\n    } else if (icon === '13d' || icon === '13n') {\n      return 'wi wi-snow';\n    } else if (icon === '50d' || icon === '50n') {\n      return 'wi wi-fog';\n    }\n\n    return 'wi wi-na';\n    },\n  },\n});\n\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}