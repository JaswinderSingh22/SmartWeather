{"ast":null,"code":"import { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'WeatherForecast',\n  setup() {\n    const store = useStore();\n    const getWeatherIcon = computed(() => store.getters['getWeatherIcon']);\n    const forecastData = computed(() => store.state.forecastData);\n    onMounted(() => {\n      store.dispatch('fetchForecastData');\n    });\n    const formatDate = timestamp => {\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString();\n    };\n\n    // // Map weather icon code to the appropriate icon class\n    // const getWeatherIcon = (iconCode) => {\n    //   switch (iconCode) {\n    //     case '01d':\n    //       return 'wi wi-day-sunny';\n    //     case '02d':\n    //       return 'wi wi-day-cloudy';\n    //     case '03d':\n    //     case '04d':\n    //       return 'wi wi-cloud';\n    //     case '09d':\n    //       return 'wi wi-day-showers';\n    //     case '10d':\n    //       return 'wi wi-day-rain';\n    //     case '11d':\n    //       return 'wi wi-day-thunderstorm';\n    //     case '13d':\n    //       return 'wi wi-day-snow';\n    //     case '50d':\n    //       return 'wi wi-day-fog';\n    //     default:\n    //       return 'wi wi-day-sunny';\n    //   }\n    //     };\n\n    return {\n      forecastData,\n      formatDate,\n      getWeatherIcon\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","useStore","name","setup","store","getWeatherIcon","getters","forecastData","state","dispatch","formatDate","timestamp","date","Date","toLocaleDateString"],"sources":["/Users/turbanator/Documents/CODING/SmartWeather/src/components/WeatherForecast.vue"],"sourcesContent":["<template>\n    <div class=\"forecast-card\">\n    <h2 class=\"text-xl font-bold mb-4\">Forecast upcoming 7 days....</h2>\n    <div v-if=\"forecastData.length > 0\" class=\"overflow-auto\">\n      <ul class=\"flex\">\n        <li v-for=\"forecast in forecastData\" :key=\"forecast.dt\" class=\"flex card flex-col items-center\">\n          <p class=\"text-sm\">Date: {{ formatDate(forecast.dt) }}</p>\n          <p>Temperature: {{ forecast.temp.day }}°C</p>\n          <p class=\"font-bold\">Feels Like: {{ forecast.feels_like.day }}°C</p>\n          <p class=\"text-sm\">Condition: {{ forecast.weather[0].description }}</p>\n          <i :class=\"getWeatherIcon(forecast.weather[0].icon) + ' text-2xl mt-2'\"></i>\n        </li>\n      </ul>\n    </div>\n    <div v-else>\n      <p>Loading forecast data...</p>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  import { computed, onMounted } from 'vue';\n  import { useStore } from 'vuex';\n  \n  export default {\n    name: 'WeatherForecast',\n    setup() {\n      const store = useStore();\n      const getWeatherIcon = computed(() => store.getters['getWeatherIcon']);\n      const forecastData = computed(() => store.state.forecastData);\n      onMounted(() => {\n      store.dispatch('fetchForecastData');\n    });\n\n    const formatDate = (timestamp) => {\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString();\n    };\n\n    // // Map weather icon code to the appropriate icon class\n    // const getWeatherIcon = (iconCode) => {\n    //   switch (iconCode) {\n    //     case '01d':\n    //       return 'wi wi-day-sunny';\n    //     case '02d':\n    //       return 'wi wi-day-cloudy';\n    //     case '03d':\n    //     case '04d':\n    //       return 'wi wi-cloud';\n    //     case '09d':\n    //       return 'wi wi-day-showers';\n    //     case '10d':\n    //       return 'wi wi-day-rain';\n    //     case '11d':\n    //       return 'wi wi-day-thunderstorm';\n    //     case '13d':\n    //       return 'wi wi-day-snow';\n    //     case '50d':\n    //       return 'wi wi-day-fog';\n    //     default:\n    //       return 'wi wi-day-sunny';\n    //   }\n    //     };\n    \n    return { forecastData, formatDate, getWeatherIcon };\n    },\n  };\n  </script>\n  <style scoped>\n.forecast-card {\n  max-width: 90%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 8%;\n  padding: 1rem;\n  border: 1px solid #3178d3;\n  border-radius: 0.5rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: #2677de;\n}\n\n.card{\n  max-width: 90%;\n  width: 50%;\n  margin-left: 0.5rem;\n  margin-right: 0.5rem;\n  padding: 1rem;\n  border: 1px solid #0f6de7;\n  border-radius: 0.5rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  background-color: cornflowerblue;\n}\n\n@media (max-width: 640px) {\n  .forecast-card {\n    max-width: 100%;\n  }\n}\n\n@media (min-width: 768px) {\n  .grid-cols-7 {\n    grid-template-columns: repeat(7, minmax(0, 1fr));\n  }\n}\n</style>"],"mappings":"AAqBE,SAASA,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AACzC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,cAAa,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,OAAO,CAAC,gBAAgB,CAAC,CAAC;IACtE,MAAMC,YAAW,GAAIR,QAAQ,CAAC,MAAMK,KAAK,CAACI,KAAK,CAACD,YAAY,CAAC;IAC7DP,SAAS,CAAC,MAAM;MAChBI,KAAK,CAACK,QAAQ,CAAC,mBAAmB,CAAC;IACrC,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAKC,SAAS,IAAK;MAChC,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,SAAQ,GAAI,IAAI,CAAC;MACvC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,CAAC;IAClC,CAAC;;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAO;MAAEP,YAAY;MAAEG,UAAU;MAAEL;IAAe,CAAC;EACnD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}