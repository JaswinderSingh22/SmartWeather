{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"7-Day Forecast\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Loading forecast data...\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_4];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, $setup.forecastData.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\" <ul>\\n        <li v-for=\\\"forecast in forecastData\\\" :key=\\\"forecast.dt\\\">\\n          <p>Date: {{ formatDate(forecast.dt) }}</p>\\n          <p>Temperature: {{ forecast.temp.day }}째C</p>\\n          <p>Feels Like: {{ forecast.feels_like.day }}째C</p>\\n          <p>Condition: {{ forecast.weather[0].description }}</p>\\n        </li>\\n      </ul> \")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _hoisted_5))]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_4","_createElementBlock","_hoisted_1","$setup","forecastData","length","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_5"],"sources":["/Users/turbanator/Documents/CODING/FRONT-END/weather-app/src/components/WeatherForecast.vue"],"sourcesContent":["<template>\n    <div>\n    <h2>7-Day Forecast</h2>\n    <div v-if=\"forecastData.length > 0\">\n      <!-- <ul>\n        <li v-for=\"forecast in forecastData\" :key=\"forecast.dt\">\n          <p>Date: {{ formatDate(forecast.dt) }}</p>\n          <p>Temperature: {{ forecast.temp.day }}째C</p>\n          <p>Feels Like: {{ forecast.feels_like.day }}째C</p>\n          <p>Condition: {{ forecast.weather[0].description }}</p>\n        </li>\n      </ul> -->\n    </div>\n    <div v-else>\n      <p>Loading forecast data...</p>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  import { computed, onMounted } from 'vue';\n  import { useStore } from 'vuex';\n  \n  export default {\n    name: 'WeatherForecast',\n    setup() {\n      const store = useStore();\n  \n      const forecastData = computed(() => store.state.forecastData);\n      onMounted(() => {\n      store.dispatch('fetchForecastData');\n    });\n\n    const formatDate = (timestamp) => {\n      const date = new Date(timestamp * 1000);\n      return date.toLocaleDateString();\n    };\n  \n      return { forecastData, formatDate };\n    },\n  };\n  </script>\n  "],"mappings":";gCAEIA,mBAAA,CAAuB,YAAnB,gBAAc;;;;;;;gCAYhBA,mBAAA,CAA+B,WAA5B,0BAAwB;oBAA3BC,UAA+B,C;;uBAbjCC,mBAAA,CAeI,cAdJC,UAAuB,EACZC,MAAA,CAAAC,YAAY,CAACC,MAAM,Q,cAA9BJ,mBAAA,CASM,OAAAK,UAAA,GARJC,mBAAA,4VAOS,C,oBAEXN,mBAAA,CAEM,OAAAO,UAAA,EAAAC,UAAA,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}