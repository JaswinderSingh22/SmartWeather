{"ast":null,"code":"import { computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'WeatherDisplay',\n  setup() {\n    const store = useStore();\n    const selectedCity = computed(() => store.state.selectedCity);\n    const weatherData = computed(() => store.state.weatherData);\n    onMounted(() => {\n      store.dispatch('fetchWeatherData');\n    });\n    return {\n      selectedCity,\n      weatherData\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","useStore","name","setup","store","selectedCity","state","weatherData","dispatch"],"sources":["/Users/turbanator/Documents/CODING/FRONT-END/weather-app/src/components/WeatherDisplay.vue"],"sourcesContent":["<template>\n    <div>\n    <h2>{{ selectedCity.name }}, {{ selectedCity.country }}</h2>\n    <div v-if=\"weatherData\">\n      <p>Temperature: {{ weatherData.temp }}°C</p>\n      <p>Feels Like: {{ weatherData.feels_like }}°C</p>\n      <p>Condition: {{ weatherData.weather[0].description }}</p>\n    </div>\n    <div v-else>\n      <p>Loading weather data...</p>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  import { computed, onMounted } from 'vue';\n  import { useStore } from 'vuex';\n  \n  export default {\n    name: 'WeatherDisplay',\n    setup() {\n      const store = useStore();\n  \n      const selectedCity = computed(() => store.state.selectedCity);\n      const weatherData = computed(() => store.state.weatherData);\n\n      onMounted(() => {\n      store.dispatch('fetchWeatherData');\n    });\n  \n      return { selectedCity, weatherData };\n    },\n  };\n  </script>\n  "],"mappings":"AAeE,SAASA,QAAQ,EAAEC,SAAQ,QAAS,KAAK;AACzC,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IAExB,MAAMI,YAAW,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACD,YAAY,CAAC;IAC7D,MAAME,WAAU,GAAIR,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,WAAW,CAAC;IAE3DP,SAAS,CAAC,MAAM;MAChBI,KAAK,CAACI,QAAQ,CAAC,kBAAkB,CAAC;IACpC,CAAC,CAAC;IAEA,OAAO;MAAEH,YAAY;MAAEE;IAAY,CAAC;EACtC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}