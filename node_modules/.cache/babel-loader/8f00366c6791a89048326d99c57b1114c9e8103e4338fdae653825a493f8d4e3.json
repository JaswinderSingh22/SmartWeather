{"ast":null,"code":"import { createStore } from 'vuex';\nconst store = createStore({\n  state: {\n    searchResults: [],\n    selectedCity: null,\n    weatherData: null,\n    forecastData: [],\n    latitude: null,\n    longitude: null\n  },\n  mutations: {\n    updateSearchResults(state, results) {\n      state.searchResults = results;\n    },\n    selectCity(state, city) {\n      state.selectedCity = city;\n      state.weatherData = null; // Reset weather data when a new city is selected\n      state.forecastData = []; // Reset forecast data when a new city is selected\n      state.latitude = null;\n      state.longitude = null;\n    },\n    updateWeatherData(state, data) {\n      state.weatherData = data;\n    },\n    updateForecastData(state, data) {\n      state.forecastData = data;\n    },\n    updateLatitude(state, latitude) {\n      state.latitude = latitude;\n    },\n    updateLongitude(state, longitude) {\n      state.longitude = longitude;\n    }\n  },\n  actions: {\n    async fetchWeatherData({\n      commit,\n      state\n    }) {\n      if (state.selectedCity === null || !state.selectedCity.latitude || !state.selectedCity.longitude) {\n        return;\n      }\n      const Weather_apiKey = 'AIzaSyCOauRVg5VwBP52O13dnJS6lWn1_xineK8';\n      const Weather_apiUrl = `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&appid={API key}`;\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Error fetching weather data:', data.error.message);\n          commit('updateWeatherData', null);\n        } else {\n          commit('updateWeatherData', data);\n        }\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        commit('updateWeatherData', null);\n      }\n    },\n    async fetchForecastData({\n      commit,\n      state\n    }) {\n      if (state.selectedCity === null) {\n        return;\n      }\n      const apiKey = 'AIzaSyCOauRVg5VwBP52O13dnJS6lWn1_xineK8';\n      const apiUrl = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${state.selectedCity.name}&days=7`;\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        if (data.error) {\n          console.error('Error fetching forecast data:', data.error.message);\n          commit('updateForecastData', []);\n        } else {\n          commit('updateForecastData', data.forecast.forecastday);\n        }\n      } catch (error) {\n        console.error('Error fetching forecast data:', error);\n        commit('updateForecastData', []);\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","store","state","searchResults","selectedCity","weatherData","forecastData","latitude","longitude","mutations","updateSearchResults","results","selectCity","city","updateWeatherData","data","updateForecastData","updateLatitude","updateLongitude","actions","fetchWeatherData","commit","Weather_apiKey","Weather_apiUrl","response","fetch","apiUrl","json","error","console","message","fetchForecastData","apiKey","name","forecast","forecastday"],"sources":["/Users/turbanator/Documents/CODING/FRONT-END/weather-app/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\nconst store = createStore({\n  state: {\n    searchResults: [],\n    selectedCity: null,\n    weatherData: null,\n    forecastData: [],\n    latitude: null,\n    longitude: null,\n  },\n  mutations: {\n    updateSearchResults(state, results) {\n      state.searchResults = results;\n    },\n    selectCity(state, city) {\n      state.selectedCity = city;\n      state.weatherData = null; // Reset weather data when a new city is selected\n      state.forecastData = []; // Reset forecast data when a new city is selected\n      state.latitude = null;\n      state.longitude = null;\n    },\n    updateWeatherData(state, data) {\n      state.weatherData = data;\n    },\n    updateForecastData(state, data) {\n      state.forecastData = data;\n    },\n    updateLatitude(state, latitude) {\n      state.latitude = latitude;\n    },\n    updateLongitude(state, longitude) {\n      state.longitude = longitude;\n    }\n  },\n  actions: {\n    async fetchWeatherData({ commit, state }) {\n      if (state.selectedCity === null || !state.selectedCity.latitude || !state.selectedCity.longitude) {\n        return;\n      }\n\n      const Weather_apiKey = 'AIzaSyCOauRVg5VwBP52O13dnJS6lWn1_xineK8';\n      const Weather_apiUrl = `https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&lon={lon}&dt={time}&appid={API key}`;\n\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        if (data.error) {\n          console.error('Error fetching weather data:', data.error.message);\n          commit('updateWeatherData', null);\n        } else {\n          commit('updateWeatherData', data);\n        }\n      } catch (error) {\n        console.error('Error fetching weather data:', error);\n        commit('updateWeatherData', null);\n      }\n    },\n    async fetchForecastData({ commit, state }) {\n      if (state.selectedCity === null) {\n        return;\n      }\n\n      const apiKey = 'AIzaSyCOauRVg5VwBP52O13dnJS6lWn1_xineK8';\n      const apiUrl = `https://api.weatherapi.com/v1/forecast.json?key=${apiKey}&q=${state.selectedCity.name}&days=7`;\n\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n\n        if (data.error) {\n          console.error('Error fetching forecast data:', data.error.message);\n          commit('updateForecastData', []);\n        } else {\n          commit('updateForecastData', data.forecast.forecastday);\n        }\n      } catch (error) {\n        console.error('Error fetching forecast data:', error);\n        commit('updateForecastData', []);\n      }\n    },\n  },\n});\n\nexport default store;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}