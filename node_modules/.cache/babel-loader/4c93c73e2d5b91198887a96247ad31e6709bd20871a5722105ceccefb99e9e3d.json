{"ast":null,"code":"import { computed, onMounted, watch, ref } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'WeatherDisplay',\n  props: {\n    cityId: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const city = ref('');\n    watch(() => props.cityId, async newCityId => {\n      await store.dispatch('weather/fetchWeatherByCityId', newCityId);\n      await store.dispatch('weather/fetchForecastByCityId', newCityId);\n      city.value = store.state.weather.city;\n    }, {\n      immediate: true\n    });\n    const selectedCity = computed(() => store.state.selectedCity);\n    const getWeatherIcon = computed(() => store.getters['getWeatherIcon']);\n    const weatherData = computed(() => store.state.weatherData);\n    console.log(\"mounted display\");\n    onMounted(() => {\n      console.log(\"mounted display\");\n      store.dispatch('fetchWeatherData');\n    });\n    return {\n      selectedCity,\n      weatherData,\n      getWeatherIcon\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","watch","ref","useStore","name","props","cityId","type","String","required","setup","store","city","newCityId","dispatch","value","state","weather","immediate","selectedCity","getWeatherIcon","getters","weatherData","console","log"],"sources":["/Users/turbanator/Documents/CODING/SmartWeather/src/components/WeatherDisplay.vue"],"sourcesContent":["<template>\n    <div class=\"flex flex-col items-center flex-1 \">\n      <div class=\"flex\">\n        <h2 class=\"text-2xl font-bold mb-4\">{{ selectedCity.name }}, {{ selectedCity.country }}, Today</h2>\n      </div>\n      \"orint\"\n      <div v-if=\"weatherData\" class=\"flex flex-1 justify-evenly p-4 w-1/2 h-40  items-center bg-blue-300 border border-blue-200 rounded-lg mr-4 mb-4\">\n        <div class=\"\">\n          <p class=\"text-xl font-bold\">Temperature: {{ weatherData.current.temp }}째C</p>\n          <p class=\"text-lg font-bold\">Feels Like: {{ weatherData.current.feels_like }}째C</p>\n          <p class=\"text-lg font-bold\">Sunrise: {{ weatherData.current.sunrise }}째C</p>\n          <p class=\"text-lg font-bold\">Sunset: {{ weatherData.current.sunset }}째C</p>\n          <p class=\"text-lg font-bold\">Condition: {{ weatherData.current.weather[0].description }}</p>\n          <p class=\"text-lg font-bold\">Pressure: {{ weatherData.current.pressure }}</p>\n          <p class=\"text-lg font-bold\">Clouds: {{ weatherData.current.clouds }}</p>\n          <p class=\"text-lg font-bold\">Visibility: {{ weatherData.current.visibility }}</p>\n          <p class=\"text-lg font-bold\">Condition: {{ weatherData.current.weather[0].description }}</p>\n        </div>\n        <div class=\"weather-icon\">\n          <i :class=\"[getWeatherIcon(weatherData.current.weather[0].icon), 'text-9xl']\"></i>\n      </div>\n    </div>\n    <div v-else>\n      <p>Loading weather data...</p>\n    </div>\n  </div>\n  </template>\n  \n  <script>\n  import { computed, onMounted, watch,ref } from 'vue';\n  import { useStore } from 'vuex';\n  \n  export default {\n    name: 'WeatherDisplay',\n    props: {\n    cityId: {\n      type: String,\n      required: true,\n    },\n  },\n    setup(props) {\n      const store = useStore();\n      const city = ref('');\n      \n      watch(\n      () => props.cityId,\n      async (newCityId) => {\n        await store.dispatch('weather/fetchWeatherByCityId', newCityId);\n        await store.dispatch('weather/fetchForecastByCityId', newCityId);\n        city.value = store.state.weather.city;\n      },\n      { immediate: true }\n    );\n\n\n  \n    const selectedCity = computed(() => store.state.selectedCity);\n    const getWeatherIcon = computed(() => store.getters['getWeatherIcon']);\n    const weatherData = computed(() => store.state.weatherData);\n      console.log(\"mounted display\");\n\n    onMounted(() => {\n      console.log(\"mounted display\");\n      store.dispatch('fetchWeatherData');\n    });\n  \n      return { selectedCity, weatherData,getWeatherIcon };\n    },\n  };\n  </script>\n<style scoped>\n\n</style>"],"mappings":"AA6BE,SAASA,QAAQ,EAAEC,SAAS,EAAEC,KAAK,EAACC,GAAE,QAAS,KAAK;AACpD,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACPC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACCC,KAAKA,CAACL,KAAK,EAAE;IACX,MAAMM,KAAI,GAAIR,QAAQ,CAAC,CAAC;IACxB,MAAMS,IAAG,GAAIV,GAAG,CAAC,EAAE,CAAC;IAEpBD,KAAK,CACL,MAAMI,KAAK,CAACC,MAAM,EAClB,MAAOO,SAAS,IAAK;MACnB,MAAMF,KAAK,CAACG,QAAQ,CAAC,8BAA8B,EAAED,SAAS,CAAC;MAC/D,MAAMF,KAAK,CAACG,QAAQ,CAAC,+BAA+B,EAAED,SAAS,CAAC;MAChED,IAAI,CAACG,KAAI,GAAIJ,KAAK,CAACK,KAAK,CAACC,OAAO,CAACL,IAAI;IACvC,CAAC,EACD;MAAEM,SAAS,EAAE;IAAK,CACpB,CAAC;IAID,MAAMC,YAAW,GAAIpB,QAAQ,CAAC,MAAMY,KAAK,CAACK,KAAK,CAACG,YAAY,CAAC;IAC7D,MAAMC,cAAa,GAAIrB,QAAQ,CAAC,MAAMY,KAAK,CAACU,OAAO,CAAC,gBAAgB,CAAC,CAAC;IACtE,MAAMC,WAAU,GAAIvB,QAAQ,CAAC,MAAMY,KAAK,CAACK,KAAK,CAACM,WAAW,CAAC;IACzDC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAEhCxB,SAAS,CAAC,MAAM;MACduB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9Bb,KAAK,CAACG,QAAQ,CAAC,kBAAkB,CAAC;IACpC,CAAC,CAAC;IAEA,OAAO;MAAEK,YAAY;MAAEG,WAAW;MAACF;IAAe,CAAC;EACrD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}